#!/bin/bash

export BENCH_ROOT=$( cd $( dirname "${BASH_SOURCE[0]}" ) && pwd )
. ${BENCH_ROOT}/../../../scripts/environment.sh
assert_docker_img_exists "nvcr.io/nvidia/tensorflow:18.04-py3"

# Run benchmarks.
python $experimenter run --config=./config.json

# Create folder that will contain benchmark results.
remove_files ./reports/results.json
create_dirs "${BENCH_ROOT}/reports"

# Parse log files
params="exp.effective_batch,exp.replica_batch,results.time,results.throughput,exp.model_title,exp.gpus,exp.num_gpus,exp.model"
python $logparser ./logs/ --recursive --output_params ${params} --output_file ./reports/results.json

# Create textual report
python $reporter --summary_file ./reports/results.json --type 'weak-scaling' --target_variable 'results.time' > ./reports/results.txt

# If matplotlib installed, plot chart
python $plotter ./reports/results.json --xparam 'exp.num_gpus' \
                                       --yparam 'results.throughput' \
                                       --series '[{"exp.model": "resnet50"}]' \
                                       --aggregation "max" \
                                       --chart-type "line" \
                                       --chart-opts '{"title": "ResNet50 scaling", "xlabel": "Num GPUs", "ylabel": "Throughput", "legend": ["Single precision"]}' \
                                       --chart-file "./reports/results.png"

# Print results
if [ -f "./reports/results.txt" ]; then
    echo "------------------------------------------------------"
    cat ./reports/results.txt
    echo "------------------------------------------------------"
else
    log_fatal "Results not found. Study log files for errors."
fi
